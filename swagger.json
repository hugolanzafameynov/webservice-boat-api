{
  "openapi": "3.1.0",
  "info": {
    "title": "Fishing Trip API",
    "description": "API for managing users, boats, fishing trips, and reservations",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:3000",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/v1/users": {
      "get": {
        "summary": "Get all users",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "List of all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "operationId": "createUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/v1/users/filters": {
      "get": {
        "summary": "Get users with filters",
        "operationId": "getUsersWithFilters",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter users by name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of users with filters applied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No users found with the specified filters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/v1/users/{userId}": {
      "get": {
        "summary": "Get a user by ID",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "User ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "User ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "User ID"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/v1/users/{userId}/full-profile": {
      "get": {
        "summary": "Get the full profile of a user",
        "operationId": "getUserFullProfileById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "User ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Full profile data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFullProfile"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/v1/boats": {
      "get": {
        "summary": "Get all boats",
        "tags": ["Boats"],
        "responses": {
          "200": {
            "description": "List of all boats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Boat"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new boat",
        "tags": ["Boats"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Boat"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Boat created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Boat"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User not found"
          },
          "403": {
            "description": "User does not have a boat license"
          }
        }
      }
    },
    "/v1/boats/{boatId}": {
      "get": {
        "summary": "Get a specific boat by ID",
        "tags": ["Boats"],
        "parameters": [
          {
            "name": "boatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Boat found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Boat"
                }
              }
            }
          },
          "404": {
            "description": "Boat not found"
          }
        }
      },
      "put": {
        "summary": "Update an existing boat",
        "tags": ["Boats"],
        "parameters": [
          {
            "name": "boatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Boat"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boat updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Boat"
                }
              }
            }
          },
          "404": {
            "description": "Boat not found or not modified"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "summary": "Delete a boat",
        "tags": ["Boats"],
        "parameters": [
          {
            "name": "boatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Boat deleted successfully"
          },
          "404": {
            "description": "Boat not found"
          }
        }
      }
    },
    "/v1/boats/filters": {
      "get": {
        "summary": "Get boats with filters",
        "tags": ["Boats"],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "band",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "yearOfManufacture",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "licenceType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "boatType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deposit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "maxCapacity",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "berths",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "dockingPort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "engineType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enginePower",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of boats matching the filters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Boat"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No boats found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/v1/boats/bounding-box": {
      "get": {
        "summary": "Get boats within a bounding box",
        "tags": ["Boats"],
        "parameters": [
          {
            "name": "minLat",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "maxLat",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "minLon",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "maxLon",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of boats within the bounding box",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Boat"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid bounding box parameters"
          },
          "404": {
            "description": "No boats found in the area"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/v1/fishing-logs": {
      "get": {
        "summary": "Get all fishing logs",
        "tags": ["FishingLogs"],
        "responses": {
          "200": {
            "description": "List of all fishing logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FishingLog"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new fishing log",
        "tags": ["FishingLogs"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FishingLog"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Fishing log created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FishingLog"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/v1/fishing-logs/{fishingLogId}": {
      "get": {
        "summary": "Get a specific fishing log by ID",
        "tags": ["FishingLogs"],
        "parameters": [
          {
            "name": "fishingLogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fishing log found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FishingLog"
                }
              }
            }
          },
          "404": {
            "description": "Fishing log not found"
          }
        }
      },
      "put": {
        "summary": "Update an existing fishing log",
        "tags": ["FishingLogs"],
        "parameters": [
          {
            "name": "fishingLogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FishingLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fishing log updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FishingLog"
                }
              }
            }
          },
          "404": {
            "description": "Fishing log not found or not modified"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "summary": "Delete a fishing log",
        "tags": ["FishingLogs"],
        "parameters": [
          {
            "name": "fishingLogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Fishing log deleted successfully"
          },
          "404": {
            "description": "Fishing log not found"
          }
        }
      }
    },
    "/v1/fishing-logs/filters": {
      "get": {
        "summary": "Get fishing logs with filters",
        "tags": ["FishingLogs"],
        "parameters": [
          {
            "name": "fishName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fishingLocation",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fishingDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "releasedFish",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of fishing logs matching the filters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FishingLog"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No fishing logs found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/v1/fishing-logs/{fishingLogId}/user/{userId}": {
      "get": {
        "summary": "Get a specific fishing log by ID and user ID",
        "tags": ["FishingLogs"],
        "parameters": [
          {
            "name": "fishingLogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fishing log found for the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FishingLog"
                }
              }
            }
          },
          "404": {
            "description": "Fishing log or user not found"
          }
        }
      }
    },
    "/v1/fishing-trips": {
      "get": {
        "summary": "Get all fishing trips",
        "responses": {
          "200": {
            "description": "A list of fishing trips",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FishingTrip"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new fishing trip",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FishingTrip"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Fishing trip created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FishingTrip"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User or boat not found"
          },
          "403": {
            "description": "User does not own a boat"
          }
        }
      }
    },
    "/v1/fishing-trips/filters": {
      "get": {
        "summary": "Get fishing trips with filters",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Filter by fishing trip title",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of filtered fishing trips",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FishingTrip"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No fishing trips found with the specified filters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/v1/fishing-trips/{fishingTripId}": {
      "get": {
        "summary": "Get a fishing trip by ID",
        "parameters": [
          {
            "name": "fishingTripId",
            "in": "path",
            "description": "The ID of the fishing trip",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A fishing trip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FishingTrip"
                }
              }
            }
          },
          "404": {
            "description": "Fishing trip not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a fishing trip by ID",
        "parameters": [
          {
            "name": "fishingTripId",
            "in": "path",
            "description": "The ID of the fishing trip to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FishingTrip"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fishing trip updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FishingTrip"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Fishing trip not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a fishing trip by ID",
        "parameters": [
          {
            "name": "fishingTripId",
            "in": "path",
            "description": "The ID of the fishing trip to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Fishing trip deleted successfully"
          },
          "404": {
            "description": "Fishing trip not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/v1/reservations": {
      "get": {
        "summary": "Get all reservations",
        "responses": {
          "200": {
            "description": "A list of all reservations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reservation"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new reservation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Reservation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Reservation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservation"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User or fishing trip not found"
          }
        }
      }
    },
    "/v1/reservations/filters": {
      "get": {
        "summary": "Get reservations with filters",
        "parameters": [
          {
            "name": "totalPrice",
            "in": "query",
            "description": "Filter reservations by total price",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of filtered reservations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reservation"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No reservations found with the specified filters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/v1/reservations/{reservationId}": {
      "get": {
        "summary": "Get a reservation by ID",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "The ID of the reservation",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A reservation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservation"
                }
              }
            }
          },
          "404": {
            "description": "Reservation not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a reservation by ID",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "The ID of the reservation to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Reservation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reservation updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservation"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Reservation not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a reservation by ID",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "The ID of the reservation to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Reservation deleted successfully"
          },
          "404": {
            "description": "Reservation not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "User ID"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "birthDate": {
            "type": "string",
            "format": "date",
            "description": "User's birth date"
          },
          "email": {
            "type": "string",
            "description": "User's email address"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number"
          },
          "address": {
            "type": "string",
            "description": "User's address"
          },
          "postalCode": {
            "type": "string",
            "description": "User's postal code"
          },
          "city": {
            "type": "string",
            "description": "User's city"
          },
          "spokenLanguages": {
            "type": "string",
            "description": "Languages spoken by the user"
          },
          "photoUrl": {
            "type": "string",
            "description": "URL to the user's photo"
          },
          "boatLicenseNumber": {
            "type": "string",
            "description": "User's boat license number"
          },
          "insuranceNumber": {
            "type": "string",
            "description": "User's insurance number"
          },
          "status": {
            "type": "string",
            "enum": ["individual", "professional"],
            "description": "User's status"
          },
          "companyName": {
            "type": "string",
            "description": "Company name (if professional)"
          },
          "activityType": {
            "type": "string",
            "enum": ["rental", "fishing guide"],
            "description": "Type of activity the user is involved in"
          },
          "siretNumber": {
            "type": "string",
            "description": "Siret number for the company"
          },
          "registrationNumber": {
            "type": "string",
            "description": "User's registration number"
          }
        }
      },
      "UserFullProfile": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "boats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Boat"
            }
          },
          "fishingTrips": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FishingTrip"
            }
          },
          "reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reservation"
            }
          },
          "fishingLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FishingLog"
            }
          }
        }
      },
      "Boat": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "brand": {
            "type": "string"
          },
          "yearOfManufacture": {
            "type": "integer"
          },
          "photoUrl": {
            "type": "string"
          },
          "licenseType": {
            "type": "string",
            "enum": [
              "coastal",
              "inland"
            ]
          },
          "boatType": {
            "type": "string",
            "enum": [
              "open",
              "cabin",
              "catamaran",
              "sailboat",
              "jet ski",
              "canoe"
            ]
          },
          "deposit": {
            "type": "integer"
          },
          "maxCapacity": {
            "type": "integer"
          },
          "berths": {
            "type": "integer"
          },
          "dockingPort": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "float"
          },
          "longitude": {
            "type": "number",
            "format": "float"
          },
          "engineType": {
            "type": "string",
            "enum": [
              "diesel",
              "gasoline",
              "none"
            ]
          },
          "enginePower": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          }
        }
      },
      "FishingLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "fishName": {
            "type": "string"
          },
          "fishPhotoUrl": {
            "type": "string",
            "format": "url"
          },
          "comment": {
            "type": "string"
          },
          "size": {
            "type": "number",
            "format": "float"
          },
          "weight": {
            "type": "number",
            "format": "float"
          },
          "fishingLocation": {
            "type": "string"
          },
          "fishingDate": {
            "type": "string",
            "format": "date"
          },
          "releasedFish": {
            "type": "boolean"
          },
          "userId": {
            "type": "integer"
          }
        }
      },
      "FishingTrip": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "practicalInfo": {
            "type": "string"
          },
          "tripType": {
            "type": "string",
            "enum": ["daily", "recurring"]
          },
          "pricingType": {
            "type": "string",
            "enum": ["global", "per person"]
          },
          "startDates": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            }
          },
          "endDates": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            }
          },
          "departureTimes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "time"
            }
          },
          "endTimes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "time"
            }
          },
          "passengers": {
            "type": "integer"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "boatId": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          }
        }
      },
      "Reservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "tripId": {
            "type": "integer"
          },
          "reservationDate": {
            "type": "string",
            "format": "date"
          },
          "reservedSeats": {
            "type": "integer"
          },
          "totalPrice": {
            "type": "number",
            "format": "float"
          }
        }
      }
    }
  }
}
